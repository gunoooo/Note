//
//  TransferViewController.swift
//  Project
//
//  Created by Park on 2021/06/12.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TransferDisplayLogic: class {
    func displayAuthSuccess(viewModel: TransferModels.Auth.ViewModel)
    func displayAuthError(viewModel: TransferModels.Auth.ViewModel)
    
    func displayTransferSuccess(viewModel: TransferModels.Transfer.ViewModel)
    func displayTransferError(viewModel: TransferModels.Transfer.ViewModel)
}

class TransferViewController: UIViewController, TransferDisplayLogic {
    var interactor: TransferBusinessLogic?
    var router: (NSObjectProtocol & TransferRoutingLogic & TransferDataPassing)?

    // MARK: Object lifecycle
      
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
      
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
      
    // MARK: Setup
      
    private func setup() {
        let viewController = self
        let interactor = TransferInteractor()
        let presenter = TransferPresenter()
        let router = TransferRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
      
    // MARK: Routing
      
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    var amount: Int = 0
      
    // MARK: View lifecycle
      
    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    func didTapBakingButton() {
        auth()
    }
    
    private func auth() {
        interactor?.auth(request: .init())
    }
    
    private func transfer() {
        interactor?.transfer(request: .init(amount: amount, bankCode: ""))
    }
      
    func displayAuthSuccess(viewModel: TransferModels.Auth.ViewModel) {
        transfer()
    }
    
    func displayAuthError(viewModel: TransferModels.Auth.ViewModel) {
        // Auth Error Event
    }
    
    func displayTransferSuccess(viewModel: TransferModels.Transfer.ViewModel) {
        
    }
    
    func displayTransferError(viewModel: TransferModels.Transfer.ViewModel) {
        // Transfer Error Event
    }
}
